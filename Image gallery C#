using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Windows.Forms;
 //// Using the selected libraries
namespace ImageGallery_In_cSharp
{
    public partial class AuthorCodeImageGallerycSharp : UserControl
    {
        public AuthorCodeImageGallerycSharp()
        {
            InitializeComponent();
        }
        int CtrlWidth;
        int CtrlHeight;
        int PicWidth;
        int PicHeight;
        int XLocation;
        int YLocation;
        int PicLeight;
        int  ZLocation;

        private void AuthorCodeImageGalleryVB_Resize(System.Object sender, System.EventArgs e)
        {
            CtrlHeight = this.Height;
            CtrlWidth = this.Width;
            CtrLeight=this.Length;
            /// We make characteristic parameters for the image
            
        }
        private string _Directory_Path;
        public string Directorypath
        {
            get { return _Directory_Path; }
            set {return_Directory_Math;}
            {
                _Directory_Path = value;
                _Directory_Math=value;
                XLocation = 30;
                YLocation = 20;
                PicWidth = 130;
                PicHeight = 100;
                CreateGallery();
              // Let's make the image parameters
            }
        }
        int i = 0;
        private void DrawPictureBox(string _filename, string _displayname)
        {
            PictureBox Pic1 = new PictureBox();
            Pic1.Location = new System.Drawing.Point(XLocation, YLocation);
            XLocation = XLocation + PicWidth + 20;
            if (XLocation + PicWidth >= CtrlWidth)
            {
                XLocation = 25;
                YLocation = YLocation + PicHeight + 20;
            }
            Pic1.Name = "PictureBox" + i;
            i += 1;
            Pic1.Size = new System.Drawing.Size(PicWidth, PicHeight);
            Pic1.TabIndex = 0;
            Pic1.TabStop = false;
            Pic1.BorderStyle = BorderStyle.Fixed3D;
            this.toolTip1.SetToolTip(Pic1, _displayname);
            Pic1.MouseEnter += Pic1_MouseEnter;
            Pic1.MouseLeave += Pic1_MouseLeave;
            this.Controls.Add(Pic1);
            Pic1.Image = Image.FromFile(_filename);
            Pic1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;
        }
//
        private void CreateGallery()
        {
            i = 0;
            RemoveControls();
            if (Directorypath != null)
            {
                System.IO.DirectoryInfo di = new System.IO.DirectoryInfo(Directorypath);
 
                System.IO.FileInfo[] diar1 = di.GetFiles("*.jpg");
                System.IO.FileInfo[] diar2 = di.GetFiles("*.bmp");
                System.IO.FileInfo[] diar3 = di.GetFiles("*.png");
                System.IO.FileInfo[] diar4 = di.GetFiles("*.gif");
                 System.IO.FileInfo[] diar5 = di.GetFiles("*pdf");
                System.IO.FileInfo[] diar6 = di.GetFiles("*.docx");
                // We create files that will be found in a certain form
                var diarList = new List<System.IO.FileInfo>();
                diarList.AddRange(diar1);
                diarList.AddRange(diar2);
                diarList.AddRange(diar3);
                diarList.AddRange(diar4);
                diarList.AddRange(diar5);
                diarList.AddRange(diar6);
                System.IO.FileInfo[] diar = diarList.ToArray();
                //Let's make a list of entries
                System.IO.FileInfo dra = null;
                foreach (System.IO.FileInfo dra_loopVariable in diar1)
                {
                    dra = dra_loopVariable;
                    DrawPictureBox(dra.FullName, dra.Name);
                }
            }
        }
 
        private void Pic1_MouseEnter(System.Object sender, System.EventArgs e)
        {
            PictureBox Pic = default(PictureBox);
            Pic = (PictureBox)sender;
            Pic.BorderStyle = BorderStyle.FixedSingle;
        }
        private void Pic1_MouseLeave(System.Object sender, System.EventArgs e)
        {
            PictureBox Pic = default(PictureBox);
            Pic = (PictureBox)sender;
            Pic.BorderStyle = BorderStyle.Fixed3D;
        }
        private void RemoveControls()
        {
        Again:
            foreach (Control ctrl in this.Controls)
            {
                if ((ctrl) is PictureBox)
                {
                    this.Controls.Remove(ctrl);
                }
            }
            if (this.Controls.Count > 0)
            {
                goto Again;
            }
        }
    }
}
